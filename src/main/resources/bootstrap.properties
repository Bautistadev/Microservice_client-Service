##================================================================================================================================================
##          CONFIGURACION DEL SERVIDOR
server.port = 8813
spring.banner.location=classpath:custom-banner.txt

##================================================================================================================================================
##          Nombre de la aplication
spring.application.name=client-Service

##================================================================================================================================================
#           Configuracion del datasource
spring.datasource.username=${database_username}
spring.datasource.password=${database_password}

##================================================================================================================================================
##          ID DE LA INSTANCIA DE EUREKA
##eureka.instance.instance-id=${spring.application.name}:${random.uuid}
##eureka.instance.leaseRenewalIntervalInSeconds=10
##eureka.instance.health-check-url-path=/actuator/health



##================================================================================================================================================
##          URL DEL SERVIDOR ADMINISTRADOR
spring.boot.admin.client.url=http://localhost:8081
spring.boot.admin.client.enabled=true
spring.boot.admin.client.auto-registration=true
spring.boot.admin.client.instance.name=client-Service
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin

##================================================================================================================================================
##          URL DEL SERVIDOR DE CONFIGURACION
spring.cloud.config.uri=${configuration_uri}
##================================================================================================================================================
##          ARCHIVO DE PERFIL A CARGAR DEL SERVIDOR DE CONFIGURACION
spring.cloud.config.profile=dev

##================================================================================================================================================
##          CONFIGURACION DE ENDPOINT DE ACTUATOR

##Esta configuración indica que todos los endpoints de gestión relacionados con la web deben estar expuestos,
# lo que significa que estarán disponibles para ser accedidos desde una interfaz web externa.
management.endpoints.web.exposure.include=*

##Similar al punto anterior, esta configuración especifica que todos los endpoints de gestión relacionados con JMX (Java Management Extensions)
# deben estar expuestos, lo que permite su acceso a través de herramientas de gestión JMX.
management.endpoints.jmx.exposure.include=*

##Habilita el endpoint de salud (/actuator/health por defecto) que proporciona información sobre el estado de la aplicación
management.endpoint.health.enabled=true

##Habilita el endpoint de apagado (/actuator/shutdown por defecto) que permite apagar la aplicación de manera segura.
management.endpoint.shutdown.enabled=true

##Habilita el endpoint de inicio (/actuator/startup por defecto) que proporciona información sobre el tiempo de inicio de la aplicación
management.endpoint.startup.enabled=true

##Habilita el endpoint de información (/actuator/info por defecto) que proporciona información general sobre la aplicación, como la versión.
management.endpoint.info.enabled=true

##Esta configuración indica que los endpoints de gestión estarán habilitados de forma predeterminada, lo que significa que no es
# necesario habilitarlos explícitamente en la configuración
management.endpoints.enabled-by-default=true

##Configura el nivel de detalle que se muestra en la respuesta del endpoint de salud.
# En este caso, "ALWAYS" indica que se deben mostrar siempre los detalles completos.
management.endpoint.health.show-details=ALWAYS

#habilitar la visibilidad de todos los datos: de lo contrario permanesen ocultos ******
management.endpoint.env.show-values=ALWAYS

#Habilitamos el endpoint de metricas
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true
##================================================================================================================================================
#           SECURITY
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9095/realms/Shopping-MicroSevice
##================================================================================================================================================
##          ARCHIVOS DE LOG
logging.file.name=client-Service.log
logging.file.max-history=5
logging.file.max-size=20MB



